{"name":"HotTubTempCtrl","description":"Use this control to display status of your HotTub.  Is open for the water to flow to the hottub or is it open for the water to flow from the hottuub.","code":"\"use strict\";\r\n/*\r\n\tUse this control to display the state of a hottub\r\n*/\r\nclass HotTubTempCtrl extends ControlElement {\r\n\tconstructor(idExtender, left, top, width, height, statusResponse){\r\n\t\tsuper('hot-tub-temp-ctrl', idExtender,  left, top);\r\n\t\tvar svg = super.getSvg();\r\n\t\tsvg.attr('width', width);\r\n\t\tsvg.attr('height', height);\r\n\r\n\t\tthis.setStatus(statusResponse);\r\n\r\n\t}\r\n\t\r\n\tisFilling()  { return this.coldValveFlow > 0 || this.hotValveFlow > 0; }\r\n\tisDraining() { return this.drainValveFlow > 0; }\r\n\tisStopped()  { return this.coldValveFlow === 0 && this.hotValveFlow === 0 && this.drainValveFlow === 0; }\r\n\t\r\n\tsetStatus(status){\r\n        this.hotValveFlow =status.mixer.hotValveFlow;\r\n\t    this.coldValveFlow = status.mixer.coldValveFlow;\r\n        this.currentPressure = status.mixer.currentPressure;\r\n        this.currentTemperature = status.mixer.currentTemperature;\r\n        this.desiredTemperature = status.mixer.desiredTemperature;\r\n        this.drainValveFlow = status.mixer.drainValveFlow;\r\n        this.mode = status.mixer.mode;\r\n        console.log(this);\r\n        if (this.isStopped() ) {\r\n            //when all is stopped, we can read the waterlevel from pressure sensor\r\n            this.setWaterLevel((this.currentPressure /0.46)*100);//pressure 0.46 means full\r\n            this.stop();\r\n        } else if (this.isFilling()) {\r\n            this.drawFill(this.hotValveFlow , this.coldValveFlow);\r\n        } else if (this.isDraining()) {\r\n            this.drain();\r\n        }\r\n       \r\n        this.getDesiredTemperatureInput().val(this.desiredTemperature);\r\n        this.getCurrentTemperatureDiv().text(this.currentTemperature);\r\n        this.getCurrentPressureDiv().text(this.currentPressure);\r\n\t\t//super.scale($('#' + super.getId()), value);\r\n\t}\r\n\tscale(value){\r\n\t\tsuper.scale(this.getLight(), value);\r\n\t\t//super.scale($('#' + super.getId()), value);\r\n\t}\r\n\trotate(degrees){\r\n\t\tsuper.rotate(this.getLight(), degrees);\r\n\t}\r\n    getBlob(){\r\n        return $('#'+super.getId()+' div.blob');\r\n    }\r\n    getLine(){\r\n        return $('#'+super.getId()+' > svg > line');\r\n    }\r\n    getDesiredTemperatureInput(){\r\n        return $('#'+super.getId()+' input[name=\"desired-temperature\"]');\r\n    }\r\n    getCurrentTemperatureDiv(){\r\n        return $('#'+super.getId()+' .current-temperature-value');\r\n    }\r\n    getCurrentPressureDiv(){\r\n        return $('#'+super.getId()+' .current-pressure-value');\r\n    }\r\n    getWaterLevelText(){\r\n        return $('#'+super.getId()+' div.water-level-text');\r\n    }\r\n    getFlowText(){\r\n        return $('#'+super.getId()+' div.flow-text');\r\n    }\r\n\r\n\tsetValue(value){\r\n\t    \r\n        if (this.drainPin.value > 0) {\r\n            this.drain();\r\n        \r\n        } else if (this.fillPin.value > 0) {\r\n            this.fill(this.fillPin.value);\r\n        } else {\r\n            this.stop();\r\n        }\r\n        this.active(true);\r\n\t}\r\n\t\r\n\tactive(isActive){\r\n\t    var classRemoving, classAdding;\r\n\t    if (isActive){\r\n\t        classRemoving = 'set-inactive'; classAdding = 'set-active';\r\n\t    } else {\r\n\t        classRemoving = 'set-active'; classAdding = 'set-inactive';\r\n\t    }\r\n\t    this.getBlob().removeClass(classRemoving).addClass(classAdding);\r\n\t    this.getLine().removeClass(classRemoving).addClass(classAdding);\r\n\t    \r\n\t}\r\n\tfill(hotFlow, coldFlow){\r\n\t    if (value === 0){\r\n\t        this.stop();\r\n\t    } else {\r\n\t        this.drawFill(hotFlow, clodFlow);\r\n\t    }\r\n\t}\r\n\t\r\n\tdrain(){ this.drawDrain(); }\r\n\tstop() {  this.drawStop(); }\r\n\t\r\n\tdrawFill(hotFlow, clodFlow) {\r\n\t    var value = hotFlow > clodFlow? hotFlow: clodFlow;\r\n\t    var maxSpeed = 0.95, minSpeed = 7.0, maxNegative = (minSpeed - maxSpeed);\r\n\t    var ratio = value / 100;\r\n\t    var negative = ratio * maxNegative;\r\n\t    var speed = minSpeed - negative;\r\n\t    speed*=100; speed = Math.round(speed); speed/=100;\r\n\t    var dur = speed+'s';\r\n\t    this.getBlob().removeClass('hiding').addClass('showing');\r\n\t\tthis.getBlob().removeClass('drain-hottub').addClass('fill-hottub');\r\n        this.getBlob().css( \"animation-duration\", function( index ) {\r\n            return speed+'s';\r\n        }); \r\n\t}\r\n\t\r\n\tdrawStop(){\r\n\t    this.getBlob().removeClass('showing').addClass('hiding');\r\n\t}\r\n\t\r\n\tdrawDrain(){\r\n\t\tvar blob = this.getBlob();\r\n\t\tthis.getBlob().removeClass('hiding').addClass('showing');\r\n\t\tthis.getBlob().removeClass('fill-hottub').addClass('drain-hottub');\r\n\t\tthis.getBlob().css( \"animation-duration\", function( index ) {\r\n            return '2s';\r\n        });\r\n\t}\r\n\t\r\n\tsetWaterLevel(procent){\r\n\t    this.waterLevel = Math.round(procent * 100) / 100;//round to two decimals\r\n\t    this.drawWaterLevel();\r\n\t}\r\n\tsetFlowTimeInMinutes(fillMinutes, drainMinutes){\r\n\t    this.fillMinutes = fillMinutes;\r\n\t    this.drainMinutes = drainMinutes;\r\n\t}\r\n\t\r\n\tdrawWaterLevel(){\r\n\t    if (this.waterLevel < 0) {\r\n\t        this.waterLevel = 0;\r\n\t    } else if (this.waterLevel > 100) {\r\n\t        this.waterLevel = 100;\r\n\t    }\r\n\t    // cy   = 75 when waterLevel === 100\r\n\t    // cy   = 120 when waterLevel === 0\r\n\t    // diff = 45 when waterLevel === 100\r\n\t    var MAX = 120, MIN = 75, DIFF = MAX - MIN, add;\r\n\t    var cx, cy, rx, ry, steps = 20;\r\n\t    add = DIFF * (this.waterLevel/100);\r\n\t    cx=223; cy = MAX - add; rx=88; ry=26;\r\n        //cx=\"223\" cy=\"87\" rx=\"88\" ry=\"26\"\r\n        \r\n        if (this.waterLevel > 83 ){\r\n            \r\n            var cyDiff  = -16, rxDiff = 11, ryDiff = 5,\r\n                cyChange,     rxChange,    ryChange;\r\n            var stepCount = (100-this.waterLevel);\r\n            var portion= stepCount / steps;\r\n            cyChange = portion*cyDiff;\r\n            rxChange = portion*rxDiff;\r\n            ryChange = portion*ryDiff;\r\n            cy = 71 - cyChange;\r\n            rx = 100 - rxChange;\r\n            ry =31 - ryChange;\r\n        }\r\n        \r\n\t    var $elm = $('ellipse.vatn');\r\n\t    $elm.attr('cx', cx);\r\n\t    $elm.attr('cy', cy);\r\n\t    $elm.attr('rx', rx);\r\n\t    $elm.attr('ry', ry);\r\n\t   \r\n\t    if (this.waterLevel === 0) {\r\n\t        $elm.removeClass('blatt').addClass('bottom-hottub');\r\n\t    }\r\n\t    else {\r\n\t        $elm.removeClass('bottom-hottub').addClass('blatt');\r\n\t    }\r\n\t    this.getWaterLevelText().text(this.waterLevel+'%');\r\n\t    this.getFlowText().text(\" \");\r\n\t    if (this.fillPin !== undefined && this.fillMinutes !== undefined\r\n\t        && (this.fillPin.value > 0 || this.drainPin.value > 0)) {\r\n\t        \r\n\t        var minutesLeft = 0, power = 0, hours = 0, minutes = 0;\r\n\t        if (this.fillPin.value > 0) {\r\n\t            var missingWater = 100 - this.waterLevel;\r\n\t            power = this.fillPin.value/1023;\r\n\t            minutesLeft = (missingWater/100)* this.fillMinutes/power;\r\n\t        } else if (this.drainPin.value > 0) {\r\n\t            power = this.drainPin.value/1023;\r\n\t            minutesLeft = (this.waterLevel/100)* this.drainMinutes/power;\r\n\t        }\r\n\t        \r\n\t        var hoursFrag = minutesLeft/60;\r\n            hours = parseInt(hoursFrag);\r\n            minutes = Math.round((hoursFrag - hours) * 60);\r\n            \r\n            //full after\r\n            var remainingTimeString = zeroFirst(hours)+':'+ zeroFirst(minutes);\r\n            //this.getFlowText().text(zeroFirst(hours)+':'+ zeroFirst(minutes));\r\n            \r\n\r\n            //full at\r\n            var d = new Date(); // for now\r\n            d.setHours ( d.getHours() + hours );\r\n            d.setMinutes ( d.getMinutes() + minutes );\r\n            \r\n            var timeFull = d.getHours()+':'+ d.getMinutes();\r\n            this.getFlowText().text(`${timeFull} (${remainingTimeString})`);\r\n\t    }\r\n\t}\r\n}//class\r\n","helpurl":"","template":"<div  id=\"hot-tub-temp-ctrl\"  style=\"position:absolute;display: inline-block\">\r\n\r\n    <style>\r\n        .water-level-text{\r\n            top: 50px;\r\n            left: 217px;\r\n            position: absolute;\r\n        }\r\n        .flow-text {\r\n            position: relative;\r\n            top:-40px;\r\n            left:25px;\r\n        }\r\n        .showing{v\r\n            visibility:visible;\r\n        }\r\n        .hiding{\r\n            visibility:hidden;\r\n        }\r\n        \r\n        .set-active{\r\n            background: #f9ee27;\r\n            stroke:#f9ef2a;\r\n            fill:#f9ee27;\r\n            \r\n            \r\n        }\r\n        .set-inactive{\r\n            background:gray;\r\n            stroke:gray;\r\n            fill:gray;\r\n        }\r\n        \r\n        .desired {\r\n            position: relative;\r\n            top: -5px;\r\n            left: 116px;\r\n        }\r\n        input[name=\"desired-temperature\"] {\r\n                width: 62px;\r\n        }\r\n        .current-temperature {\r\n                position: relative;\r\n                left: 120px;\r\n        }\r\n        .current-pressure {\r\n            position: relative;\r\n            left: 120px;\r\n            top: 0px;\r\n        }\r\n        .current-temperature-value,.current-pressure-value{\r\n            font-weight:bold;\r\n        }\r\n        .blatt{\r\n        \tfill:#1e1efe;stroke:#1e1efe;stroke-width:0\r\n        }\r\n        .bottom-hottub{\r\n        \tfill:darkgray;stroke:darkgray;stroke-width:0\r\n        }\r\n        .svart{\r\n        \tfill:black;stroke:black;stroke-width:2\r\n        }\r\n        .orange{\r\n        \tfill:orange;stroke:orange;stroke-width:2\r\n        }\r\n        .inside-hottub{\r\n            \tfill:gray;stroke:gray;stroke-width:2\r\n        }\r\n        \r\n        div.blob-white-box {\r\n            background: white;\r\n            height: 16px;\r\n            width: 35px;\r\n            position: absolute;\r\n            top: 148px;\r\n            left: -24px;\r\n        }\r\n        \r\n        .blob {\r\n            z-index:-1;\r\n          left:0px;\r\n          position:relative;\r\n          width: 25px;\r\n          height: 8px;\r\n          border-radius: 50%;\r\n          -webkit-backface-visibility: hidden;\r\n           -moz-backface-visibility: hidden;\r\n           -ms-backface-visibility: hidden;\r\n           backface-visibility: hidden;\r\n        \r\n           -webkit-perspective: 1000;\r\n           -moz-perspective: 1000;\r\n           -ms-perspective: 1000;\r\n           perspective: 1000;\r\n          -webkit-transform: translate3d(0, 0, 0);\r\n           -moz-transform: translate3d(0, 0, 0);\r\n           -ms-transform: translate3d(0, 0, 0);\r\n           transform: translate3d(0, 0, 0);\r\n        }\r\n        \r\n        .drain-hottub{\r\n            -webkit-animation: drain 9s infinite; /* Safari 4.0 - 8.0 */\r\n            -webkit-animation-timing-function: linear; /* Safari 4.0 - 8.0 */\r\n            animation: drain 9s infinite;\r\n            animation-timing-function: linear; \r\n        }\r\n        \r\n        .fill-hottub {\r\n            -webkit-animation: fill 9s infinite; /* Safari 4.0 - 8.0 */\r\n            -webkit-animation-timing-function: linear; /* Safari 4.0 - 8.0 */\r\n            animation: fill 9s infinite;\r\n            animation-timing-function: linear; \r\n        }\r\n        \r\n        /* Safari 4.0 - 8.0 */\r\n        @-webkit-keyframes fill {\r\n            0%   {left:-25px; top:149px;}\r\n            100% {left:130px; top:149px;}\r\n        }\r\n        \r\n        /* Standard syntax */\r\n        @keyframes fill {\r\n            0%   {left:-25px; top:149px;}\r\n            100% {left:130px; top:149px;}\r\n        }\r\n        /* Safari 4.0 - 8.0 */\r\n        @-webkit-keyframes drain {\r\n            0%   {left:130px; top:149px;}\r\n            100% {left:-5px; top:149px;}\r\n        }\r\n        \r\n        /* Standard syntax */\r\n        @keyframes drain {\r\n            0%   {left:130px; top:149px;}\r\n            100% {left:-5px; top:149px;}\r\n        }\r\n    </style>\r\n    <div class=\"blob-wrapper\">\r\n        <div class=\"blob hiding\"></div>\r\n    </div>\r\n    <div class=\"blob-white-box\"></div>\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" x=\"0px\" y=\"0px\" xml:space=\"preserve\">\r\n        <ellipse cx=\"223\" cy=\"70\" rx=\"100\" ry=\"30\" class=\"inside-hottub\" /><!--inn í potti-->\r\n        <ellipse cx=\"223\" cy=\"75\" rx=\"88\" ry=\"26\" class=\"blatt vatn\" /><!--vatn-->\r\n        <ellipse cx=\"223\" cy=\"151\" rx=\"100\" ry=\"30\" class=\"svart\" /><!--bottom-->\r\n        <path fill=\"black\" stroke=\"#000\" d=\"M122,74 C170,110 272,110 323,74 V150 H122\"/>\r\n        <!--<use x=\"120\" y=\"30\" href=\"#pottur\"/>-->\r\n        <line x1=\"0\" y1=\"145\" x2=\"122\" y2=\"145\" style=\"stroke-width:4\" class=\"set-active\"/><!--Slanga-->\r\n        <!--<path d=\"M 10 30 q 100 -50 160 30\" stroke=\"#d4d861\" stroke-width=\"4\" fill=\"none\" />-->\r\n    </svg>\r\n    <div class=\"water-level-text\">%</div>\r\n    <div class=\"flow-text\"> Here is the flow text</div>\r\n    <div class=\"desired\">\r\n        <span >Desired temperature</span>\r\n        <input name=\"desired-temperature\" type=\"number\" step=\"0.1\">\r\n         <span > °C</span>\r\n    </div>\r\n    <div class=\"current-temperature\">\r\n         <span>Current temperature</span>\r\n        <span class=\"current-temperature-value\"></span>\r\n        <span > °C</span>\r\n    </div>\r\n    <div class=\"current-pressure\">\r\n        <span>Current pressure</span>\r\n        <span class=\"current-pressure-value\"></span>\r\n        <span > PSI</span>\r\n    </div>\r\n</div>\r\n","active":true}